name: CI

on:
  - push

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          
      - name: Cache node_modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      # Runs a set of commands using the runners shell
      - name: Install Dependencies
        run: npm ci


  test:
    needs:
      - setup

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          
      - name: Cache node_modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: npm test -- --coverage

      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          fail_ci_if_error: true
          
          
  build:
    needs:
      - setup

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
          
      - uses: actions/checkout@master
      
      - name: Build docker image
        run: docker build -t lotta/schedule-provider .
        
      - name: Save docker image
        run: |
          mkdir -p artifact
          docker save -o artifact/image.tar lotta/schedule-provider
    
      - name: Docker image build artifact upload
        uses: actions/upload-artifact@v2.2.4
        with:
          name: docker-image
          path: artifact
    
  push:
    needs:
      - build
      - test

    runs-on: ubuntu-latest
    
    steps:
    - name: Set env
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        fi;

    - name: Download built image
      uses: actions/download-artifact@v2.0.10
      with:
        name: docker-image
        path: artifact

    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: load image from archive
      run: |
        docker load -i artifact/image.tar
        
    - name: push image to registry
      run: |
        docker tag lotta/schedule-provider lotta/schedule-provider:$GITHUB_SHA
        [ -z "$RELEASE_VERSION" ] || docker tag lotta/schedule-provider lotta/schedule-provider:$RELEASE_VERSION
        docker push lotta/schedule-provider
