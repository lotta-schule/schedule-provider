name: CI

on:
  - push
  - pull_request

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          
      - name: Cache node_modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      # Runs a set of commands using the runners shell
      - name: Install Dependencies
        run: npm install


  test:
    needs: [ setup ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          
      - name: Cache node_modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - uses: mattallty/jest-github-action@v1
        name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
          
      - uses: actions/checkout@master
      
      - name: Build docker image
        run: docker build -t lotta/schedule-provider .
        
      - name: Save docker image
        run: docker save -o image.tar lotta/schedule-provider
    
      - name: Docker image build artifact upload
        uses: actions/upload-artifact@v2.2.4
        with:
          name: docker-image
          path: image.tar
    
  push:
    if: startsWith(github.event.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download built image
      uses: actions/download-artifact@v2.0.10
      with:
        name: docker-image
        path: image.tar

    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: load image from archive
      run: |
        docker load -i image.tar
        
    - name: push image to registry
      run: docker tag lotta/schedule-provider:${{github.ref_name}}
